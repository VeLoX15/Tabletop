@page "/Administration/Users"
@attribute [Authorize(Roles = Roles.VIEW_USERS)]
@inherits ManagementBasePage<User, UserService>
@inject AuthService authService
@inject IStringLocalizer<App> localizer

<PageTitle>@localizer["TABLEBRICKS"] - @localizer["USERS"] (@localizer["MANAGEMENT"])</PageTitle>

<div class="container">
    <div class="card">
        <div class="card-header ps-4 pe-4">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h2>User Management</h2>
                <div class="ms-auto">
                    <button type="button" class="btn" @onclick="() => OpenFilter = true"><i class="fa-solid fa-filter fa-xl"></i></button>
                    <AuthorizeView Roles="@(Roles.ADD_USERS)">
                        <Authorized>
                            <button type="button" class="btn" @onclick="NewAsync"><i class="fa-solid fa-square-plus fa-xl"></i></button>
                        </Authorized>
                    </AuthorizeView>
                </div>
            </div>
        </div>
        <div class="card-content m-1">
            <div class="table-responsive">
                <table class="table mb-0 table-lg">
                    <thead>
                        <tr>
                            <th>@localizer["NAME"]</th>
                            <th>@localizer["USERNAME"]</th>
                            <th class="text-right">@localizer["ACTION"]</th>
                        </tr>
                    </thead>
                    <tbody>
                        <Virtualize Items="Data" Context="user">
                            <tr>
                                <td>@user.DisplayName</td>
                                <td>@user.Username</td>
                                <td class="text-right">
                                    <AuthorizeView Roles="@(Roles.EDIT_USERS)">
                                        <Authorized>
                                            <span class="pe-1 aktion-icon" role="button" @onclick="async () => await EditAsync(user)">
                                                <i class="fa-solid fa-pen-to-square"></i>
                                            </span>
                                        </Authorized>
                                    </AuthorizeView>
                                    @if (_loggedInUser?.Id != user.Id)
                                    {
                                        <AuthorizeView Roles="@(Roles.DELETE_USERS)">
                                            <Authorized>
                                                <span class="pe-1 aktion-icon" role="button" @onclick="() => SelectedForDeletion = user">
                                                    <i class="fa-solid fa-trash-can"></i>
                                                </span>
                                            </Authorized>
                                        </AuthorizeView>
                                    }
                                </td>
                            </tr>
                        </Virtualize>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@if (Input is not null)
{
    <Modal Title="@String.Format("{0} {1}: {2}", @localizer["EDIT"], @localizer["USER"], Input.Username)"
           OnClosed="() => Input = null"
           ModalSize="ModalSize.LG"
           HideFooter="true">

        <EditForm Model="Input" @ref="_form">
            <FluentValidationValidator />
            <ValidationSummary />
            <div class="row">
                <div class="col-12">
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.Username" class="form-control" id="user-username" placeholder="Username" />
                        <label for="user-username">@localizer["USERNAME"]</label>
                        <ValidationMessage For="() => Input.Username" />
                    </div>

                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.DisplayName" class="form-control" id="user-displayname" placeholder="Name" />
                        <label for="user-displayname">@localizer["NAME"]</label>
                        <ValidationMessage For="() => Input.DisplayName" />
                    </div>

                    @if (Input.UserId is 0)
                    {
                        <div class="form-floating mb-3">
                            <InputText @bind-Value="Input.Password" class="form-control" id="user-password" placeholder="Password" type="password" />
                            <label for="user-password">@localizer["PASSWORD"]</label>
                            <ValidationMessage For="() => Input.Password" />
                        </div>
                    }

                    <h4>@localizer["PERMISSIONS"]</h4>

                    @if (_loggedInUser is not null && Input.UserId == _loggedInUser.UserId)
                    {
                        <p>@localizer["OWN_PERMISSIONS"]</p>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-lg">
                                <thead>
                                    <tr>
                                        <th>@localizer["NAME"]</th>
                                        <th>@localizer["DESCRIPTION"]</th>
                                        <th>@localizer["ACTION"]</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var permission in Input.Permissions)
                                    {
                                        var description = permission.GetLocalization(CultureInfo.CurrentCulture);
                                        <tr>
                                            <td class="text-bold-500">@description?.Name</td>
                                            <td>@description?.Description</td>
                                            <td>
                                                <button type="button" class="btn btn-danger" @onclick="() => Input.Permissions.Remove(permission)">
                                                    <i class="fa-solid fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }

                                    @if (Input.Permissions.Count != AppdataService.Permissions.Count)
                                    {
                                        <tr>
                                            <td colspan="3">
                                                <div class="input-group">
                                                    <select @onchange="PermissionSelectionChangedAsync" class="form-select" id="inputGroupSelect04" aria-label="Berechtigung">
                                                        @if (SelectedPermission is null)
                                                        {
                                                            <option value="0" selected>@localizer["SELECT_CHOOSE"]</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="0">@localizer["SELECT_CHOOSE"]</option>
                                                        }

                                                        @foreach (var permission in AppdataService.Permissions)
                                                        {
                                                            var userberechtigung = Input.Permissions.FirstOrDefault(x => x.PermissionId == permission.PermissionId);
                                                            var description = permission.GetLocalization(CultureInfo.CurrentCulture);
                                                            @if (userberechtigung is null)
                                                            {
                                                                <option value="@permission.PermissionId">@description?.Name</option>
                                                            }
                                                        }
                                                    </select>

                                                    <button @onclick="AddPermissionAsync" class="btn btn-success" type="button" disabled="@(SelectedPermission is null)">
                                                        <i class="fa-solid fa-plus"></i>
                                                    </button>
                                                </div>
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </EditForm>
        <div class="toolbar">
            <button type="button" class="btn btn-danger" @onclick="() => Input = null">@localizer["CANCEL"]</button>
            <button type="button" class="btn btn-success" @onclick="SaveAsync">@localizer["SAVE"]</button>
        </div>
    </Modal>
}

@if (SelectedForDeletion is not null)
{
    <ConfirmModal Title="@localizer["DELETE"]"
                  OnClosed="() => SelectedForDeletion = null"
                  OnConfirmed="DeleteAsync">
        <p>@String.Format(localizer["REQUEST_DELETION"])</p>
    </ConfirmModal>
}

@if (OpenFilter)
{
    <Modal Title="@localizer["FILTER"]"
           OnClosed="() => OpenFilter = false"
           ModalSize="ModalSize.LG"
           HideFooter="true">

        <div class="card-content" style="padding: 0 1.3rem;">
            <EditForm Model="Filter" OnValidSubmit="async () => await LoadAsync(true)">
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Filter.SearchPhrase" class="form-control" id="usermanagement-filter-searchphrase" placeholder="Search users" />
                    <label for="usermanagement-filter-searchphrase">@localizer["SEARCH"]</label>
                </div>

                <div class="toolbar">
                    <button type="submit" class="btn btn-primary">@localizer["SEARCH"]</button>
                </div>

            </EditForm>
        </div>

    </Modal>
}