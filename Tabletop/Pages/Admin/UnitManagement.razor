@page "/Administration/Units"
@inherits ManagementBasePage<Unit, UnitService>
@attribute [Authorize(Roles = Roles.VIEW_UNITS)]
<PageTitle>Tablebricks - Units (Management)</PageTitle>

<div class="container">
    <div class="card">
        <div class="card-header ps-4">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h2>Unit Management</h2>
                <div class="text-right">
                    <AuthorizeView Roles="@(Roles.EDIT_UNITS)">
                        <Authorized>
                            <button type="button" class="btn" @onclick="UpdateAppdata"><i class="fa-solid fa-rotate-right fa-xl"></i></button>
                        </Authorized>
                    </AuthorizeView>
                    <AuthorizeView Roles="@(Roles.ADD_UNITS)">
                        <Authorized>
                            <button type="button" class="btn" @onclick="NewAsync"><i class="fa-solid fa-square-plus fa-xl"></i></button>
                        </Authorized>
                    </AuthorizeView>
                </div>
            </div>
            <div style="text-align: justify">
                <p>In the Unit Management, there is an overview of all current units which can be edited or deleted. Moreover, new units can be created.</p>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-3 col-sm-12 order-lg-3">
            <div class="card">
                <div class="card-header">
                    <h4>Filter</h4>
                </div>
                <div class="card-content" style="padding: 0 1.3rem;">
                    <EditForm Model="Filter" OnValidSubmit="async () => await LoadAsync(true)">
                        <div class="form-floating mb-3">
                            <InputText @bind-Value="Filter.SearchPhrase" class="form-control" id="usermanagement-filter-searchphrase" placeholder="Search users" />
                            <label for="usermanagement-filter-searchphrase">Search</label>
                        </div>

                        <div class="toolbar">
                            <button type="submit" class="btn btn-primary">Search</button>
                        </div>

                    </EditForm>
                </div>
            </div>
        </div>
        <div class="col-lg-9 col-sm-12">

            <div class="card p-4">
                <div class="card-content">
                    <!-- Table with no outer spacing -->
                    <div class="table-responsive">
                        <table class="table mb-0 table-lg">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Fraction</th>
                                    <th class="text-right">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <Virtualize Items="Data" Context="user">
                                    <tr>
                                        <td>@user.Name</td>
                                        <td>@user.Fraction.Name</td>
                                        <td class="text-right">
                                            <AuthorizeView Roles="@(Roles.DELETE_UNITS)">
                                                <Authorized>
                                                    <span class="aktion-icon" role="button" @onclick="() => SelectedForDeletion = user">
                                                        <i class="fa-solid fa-trash-can"></i>
                                                    </span>
                                                </Authorized>
                                            </AuthorizeView>
                                            <AuthorizeView Roles="@(Roles.EDIT_UNITS)">
                                                <Authorized>
                                                    <span class="aktion-icon" role="button" @onclick="async () => await EditAsync(user)">
                                                        <i class="fa-solid fa-pen-to-square"></i>
                                                    </span>
                                                </Authorized>
                                            </AuthorizeView>
                                        </td>
                                    </tr>
                                </Virtualize>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>





@if (Input is not null)
{
    <Modal Title="@String.Format("Edit unit: {0}", Input.Name)"
           OnClosed="() => Input = null"
           ModalSize="ModalSize.LG"
           HideFooter="true">

        <EditForm Model="Input" @ref="_form">
            <FluentValidationValidator />
            <div class="row">
                <div class="col-12">
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.Name" class="form-control" id="unit-name" placeholder="Name" />
                        <label for="unit-name">Name</label>
                        <ValidationMessage For="() => Input.Name" />
                    </div>

                    <div class="form-floating mb-3">
                        <InputSelect id="select-fraction" @bind-Value="Input.FractionId" class="form-control">
                            @foreach (Fraction item in AppdataService.Fractions)
                            {
                                <option value="@item.FractionId">@item.Name</option>
                            }
                        </InputSelect>
                        <label for="select-fraction">Choose Fraction</label>
                    </div>

                    <div class="form-floating mb-3">
                        <InputTextArea @bind-Value="Input.Description" class="form-control" id="unit-description" placeholder="Description" />
                        <label for="unit-description">Description</label>
                        <ValidationMessage For="() => Input.Description" />
                    </div>

                    <div class="form-floating mb-3">
                        <InputTextArea @bind-Value="Input.Mechanic" class="form-control" id="unit-mechanic" placeholder="Mechanic" />
                        <label for="unit-mechanic">Mechanic</label>
                        <ValidationMessage For="() => Input.Mechanic" />
                    </div>

                    <div class="form-floating mb-3">
                        <InputSelect id="unit-defense" @bind-Value="Input.Defense" class="form-control">
                            @for (int i = 1; i <= 10; i++)
                            {
                                <option value="@i">@i</option>
                            }
                        </InputSelect>
                        <label for="unit-defense">Defense</label>
                        <ValidationMessage For="() => Input.Defense" />
                    </div>

                    <div class="form-floating mb-3">
                        <InputNumber @bind-Value="Input.Moving" class="form-control" id="unit-moving" placeholder="Moving" />
                        <label for="unit-moving">Moving</label>
                        <ValidationMessage For="() => Input.Moving" />
                    </div>

                    <div class="form-floating mb-3">
                        <InputSelect id="select-weapon" @bind-Value="Input.PrimaryWeaponId" class="form-control">
                            <option value="">None</option>
                            @foreach (Weapon item in AppdataService.Weapons)
                            {
                                <option value="@item.WeaponId">@item.Name</option>
                            }
                        </InputSelect>
                        <label for="select-weapon">Choose Primary Weapon</label>
                    </div>

                    <div class="form-floating mb-3">
                        <InputSelect id="select-weapon" @bind-Value="Input.SecondaryWeaponId" class="form-control">
                            <option value="">None</option>
                            @foreach (Weapon item in AppdataService.Weapons)
                            {
                                <option value="@item.WeaponId">@item.Name</option>
                            }
                        </InputSelect>
                        <label for="select-weapon">Choose Secondary Weapon</label>
                    </div>
                </div>
            </div>
        </EditForm>

        <div class="toolbar">
            <button type="button" class="btn btn-danger" @onclick="() => Input = null">Cancel</button>
            <button type="button" class="btn btn-success" @onclick="SaveAsync">Save</button>
        </div>
    </Modal>
}

@if (SelectedForDeletion is not null)
{
    <ConfirmModal Title="Delete"
                  OnClosed="() => SelectedForDeletion = null"
                  OnConfirmed="DeleteAsync">
        <p>@String.Format("Should the unit '{0}' really be deleted?", SelectedForDeletion.Name)</p>
    </ConfirmModal>
}