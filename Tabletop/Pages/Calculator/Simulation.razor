@page "/Calculator/Simulation/"
@attribute [Authorize]
<PageTitle>Tablebricks - Simulation</PageTitle>

<div class="container">
    <div class="card">
        <div class="card-header ps-4">
            <h2>Simulation</h2>
            <p>You can simulate a battle between two types of units here.</p>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4">
            <div class="card p-4">
                <h1 class="text-center">Unit 1</h1>
                <div class="form-floating mb-3">
                    <InputSelect id="select-fraction" @bind-Value="FractionId1" class="form-control">
                        @foreach (Fraction item in Fractions)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </InputSelect>
                    <label for="select-unit">Fraction</label>
                </div>

                <div class="form-floating mb-3">
                    <InputSelect id="select-unit" @bind-Value="UnitId1" class="form-control">
                        @foreach (Unit item in Units.Where(x => x.FractionId == FractionId1))
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </InputSelect>
                    <label for="select-unit">Unit</label>
                </div>

                <div class="form-floating mb-3">
                    <InputSelect id="unit-quantity" @bind-Value="Quantity1" class="form-control">
                        @for (int i = 1; i <= 8; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </InputSelect>
                    <label for="unit-quantity">Quantity</label>
                </div>

                <div class="form-floating mb-3">
                    <InputSelect id="select-unit" @bind-Value="Cover1" class="form-control">
                        @foreach (string cover in Enum.GetNames(typeof(CoverTypes)))
                        {
                            <option value="@cover">@cover</option>
                        }
                    </InputSelect>
                    <label for="select-unit">Cover Type</label>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card p-4">
                <h1 class="text-center">VS.</h1>
                <div class="form-floating mb-3">
                    <InputNumber @bind-Value="Distance" class="form-control" id="unit-distance" placeholder="Distance" />
                    <label for="unit-distance">Distance</label>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card p-4">
                <h1 class="text-center">Unit 2</h1>
                <div class="form-floating mb-3">
                    <InputSelect id="select-fraction" @bind-Value="FractionId2" class="form-control">
                        @foreach (Fraction item in Fractions)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </InputSelect>
                    <label for="select-fraction">Fraction</label>
                </div>

                <div class="form-floating mb-3">
                    <InputSelect id="select-unit" @bind-Value="UnitId2" class="form-control">
                        @foreach (Unit item in Units.Where(x => x.FractionId == FractionId2))
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </InputSelect>
                    <label for="select-unit">Unit</label>
                </div>

                <div class="form-floating mb-3">
                    <InputSelect id="unit-quantity" @bind-Value="Quantity2" class="form-control">
                        @for (int i = 1; i <= 8; i++)
                        {
                            <option value="@i">@i</option>
                        }
                    </InputSelect>
                    <label for="unit-quantity">Quantity</label>
                </div>

                <div class="form-floating mb-3">
                    <InputSelect id="select-unit" @bind-Value="Cover2" class="form-control">
                        @foreach (string cover in Enum.GetNames(typeof(CoverTypes)))
                        {
                            <option value="@cover">@cover</option>
                        }
                    </InputSelect>
                    <label for="select-unit">Cover Type</label>
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <div class="card p-4">
                <div class="row">
                    <div class="col">
                        <h4>Battle report</h4>
                    </div>
                    <div class="col-auto text-end">
                        <button @onclick="StartSimulation" class="btn btn-success" type="button">
                            <i class="fa-solid fa-forward"></i>
                        </button>
                    </div>
                </div>
                <hr />
                <div>
                    @foreach (string report in Log)
                    {
                        <p>@report</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>