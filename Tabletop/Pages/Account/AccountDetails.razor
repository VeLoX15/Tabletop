@page "/Account/Profile/"
@attribute [Authorize]
@inject AuthService authService
@inject UnitService unitService
@inject UserService userService
<PageTitle>Tablebricks - Account</PageTitle>

@if (CurrentUser is not null)
{
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="fb-profile-block">
                    <div class="fb-profile-block-thumb cover-container"></div>
                    <div class="profile-img">
                        <a>
                            <img src="@CurrentUser.ConvertedImage" alt="" title="Logo">
                        </a>
                    </div>
                    <div class="profile-name">
                        <h2>@CurrentUser.Username (@CurrentUser.DisplayName)</h2>
                    </div>

                    <div class="fb-profile-block-menu">
                        <div class="block-menu">
                            <ul>
                                <li><a @onclick="() => Menu(0)">Information</a></li>
                                <li><a @onclick="() => Menu(1)">Fractions</a></li>
                                <li><a @onclick="() => Menu(2)">Friends</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            @if (Option == 0)
            {
                <div class="mt-3">
                    <h5>Description</h5>
                    <p>@CurrentUser.Description</p>
                </div>
            }
            else if (Option == 1)
            {
                <div class="form-group mt-3">
                    <div class="form-floating mb-3">
                        <InputSelect id="fractions" @bind-Value="SelectedFraction" @oninput="SelectFractionUnitsByUser" class="form-control">
                            @foreach (Fraction item in Fractions)
                            {
                                <option value="@item.FractionId">@item.Name</option>
                            }
                        </InputSelect>
                        <label for="fractions">Choose Fraction</label>
                    </div>
                </div>
                <div class="col-lg-3 col-md-12">
                    <div>
                        <button type="button" class="btn btn-success" @onclick="SwitchUnitModal"><i class="fa-solid fa-plus"></i></button>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-lg">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Quantity</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (Unit item in UserUnits.Where(x => x.FractionId == SelectedFraction))
                            {
                                <tr>
                                    <td>@item.Name</td>
                                    <td>@item.Quantity</td>
                                    <td>
                                        <span class="aktion-icon" role="button" @onclick="() => DeleteUnitAsync(item.UnitId)">
                                            <i class="fa-solid fa-trash-can"></i>
                                        </span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else if (Option == 2)
            {
                <div class="row">
                    <div class="col-lg-15">
                        <div class="table-responsive">
                            <table class="table table-lg">
                                <thead>
                                    <tr>
                                        <th>Your Friends</th>
                                        <th></th>
                                        <th>
                                            <div class="col-lg-3 col-md-12">
                                                <div>
                                                    <button type="button" class="btn btn-success" @onclick="SwitchFriendModal"><i class="fa-solid fa-plus"></i></button>
                                                </div>
                                            </div>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (User item in Friends)
                                    {
                                        <tr>
                                            <td>
                                                <a>
                                                    <img src="@item.ConvertedImage" height="50" width="50" class="rounded-circle" alt="" title="Logo">
                                                </a>
                                            </td>
                                            <td>@item.Username (@item.DisplayName)</td>
                                            <td>
                                                <span class="aktion-icon" role="button" @onclick="() => DeleteFriendAsync(item.UserId)">
                                                    <i class="fa-solid fa-trash-can"></i>
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            }
            else
            {

            }
        </div>
    </div>
}

@if (IsSearching)
{
    <Modal Title="Find Friends"
       OnClosed="() => IsSearching = false"
       ModalSize="ModalSize.LG"
       HideFooter="true">

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h4>Filter</h4>
                    </div>
                    <div class="card-content" style="padding: 0 1.3rem;">
                        <EditForm Model="Filter" OnValidSubmit="async () => await LoadAsync(true)">
                            <div class="form-floating mb-3">
                                <InputText @bind-Value="Filter.SearchPhrase" class="form-control" id="usermanagement-filter-searchphrase" placeholder="Search users" />
                                <label for="usermanagement-filter-searchphrase">Search</label>
                            </div>

                            <div class="toolbar">
                                <button type="submit" class="btn btn-primary">Search</button>
                            </div>

                        </EditForm>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-content">
                        <div class="table-responsive">
                            <table class="table mb-0 table-lg">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Username</th>
                                        <th class="text-right">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <Virtualize Items="Users" Context="user">
                                        <tr>
                                            <td>@user.DisplayName</td>
                                            <td>@user.Username</td>
                                            <td class="text-right">
                                                @if (Friends.FirstOrDefault(x => x.Id == user.Id) == null && user.Id != CurrentUser?.Id)
                                                {
                                                    <div>
                                                        <button type="button" class="btn btn-success" @onclick="() => AddFriendAsync(user.Id)"><i class="fa-solid fa-plus"></i></button>
                                                    </div>
                                                }
                                            </td>
                                        </tr>
                                    </Virtualize>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </Modal>
}

@if (AddUnit)
{
    <Modal Title="Add to Units"
       OnClosed="() => AddUnit = false"
       ModalSize="ModalSize.LG"
       HideFooter="true">

        <EditForm Model="Unit">
            <FluentValidationValidator />
            <ValidationSummary />
            <div class="row">
                <div class="col-12">
                    <div class="form-floating mb-3">
                        <InputSelect id="select-fraction" @bind-Value="FractionId" class="form-control">
                            @foreach (Fraction item in Fractions)
                            {
                                <option value="@item.FractionId">@item.Name</option>
                            }
                        </InputSelect>
                        <label for="select-fraction">Choose Fraction</label>
                    </div>

                    <div class="form-floating mb-3">
                        <InputSelect id="select-unit" @bind-Value="UnitId" class="form-control">
                            @foreach (Unit item in Units.Where(x => x.FractionId == FractionId))
                            {
                                <option value="@item.UnitId">@item.Name</option>
                            }
                        </InputSelect>
                        <label for="select-unit">Choose Unit</label>
                    </div>

                    <div class="form-floating mb-3">
                        <InputNumber @bind-Value="Quantity" class="form-control" id="unit-quantity" placeholder="Quantity" />
                        <label for="unit-quantity">Quantity</label>
                    </div>
                </div>
            </div>
        </EditForm>

        <div class="toolbar">
            @*            <button type="button" class="btn btn-danger" @onclick="">Cancel</button>*@
            <button type="button" class="btn btn-success" @onclick="() => AddUnitAsync()">Save</button>
        </div>
    </Modal>
}

@*@if (SelectedForDeletion is not null)
{
    <ConfirmModal Title="Delete"
              OnClosed="() => SelectedForDeletion = null"
              OnConfirmed="DeleteAsync">
        <p>@String.Format($@"Should the user '{0}' really be deleted?", SelectedForDeletion.DisplayName)</p>
    </ConfirmModal>
}*@