@page "/Account/Army-Builder"
@attribute [Authorize]
@inject AuthService authService
@inject UnitService unitService
@inherits ManagementBasePage<Template, TemplateService>
@inject IStringLocalizer<App> localizer

<PageTitle>@localizer["TABLEBRICKS"] - @localizer["ARMY_BUILDER"]</PageTitle>

<div class="container">
    <div class="card">
        <div class="card-header ps-4">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h2>@localizer["ARMY_BUILDER"]</h2>
                <button type="button" class="btn" @onclick="NewAsync"><i class="fa-solid fa-square-plus fa-xl"></i></button>
            </div>
            <div style="text-align: justify">
                <p></p>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-3 col-sm-12 order-lg-3">
            <div class="card">
                <div class="card-header">
                    <h4>@localizer["FILTER"]</h4>
                </div>
                <div class="card-content" style="padding: 0 1.3rem;">
                    <EditForm Model="Filter" OnValidSubmit="async () => await LoadAsync(true)">
                        <div class="form-floating mb-3">
                            <InputText @bind-Value="Filter.SearchPhrase" class="form-control" id="usermanagement-filter-searchphrase" placeholder="Search users" />
                            <label for="usermanagement-filter-searchphrase">@localizer["SEARCH"]</label>
                        </div>

                        <div class="toolbar">
                            <button type="submit" class="btn btn-primary">@localizer["SEARCH"]</button>
                        </div>

                    </EditForm>
                </div>
            </div>
        </div>
        <div class="col-lg-9 col-sm-12">

            <div class="card p-4">
                <div class="card-content">
                    <!-- Table with no outer spacing -->
                    <div class="table-responsive">
                        <table class="table mb-0 table-lg">
                            <thead>
                                <tr>
                                    <th>@localizer["NAME"]</th>
                                    <th>@localizer["FRACTION"]</th>
                                    <th>@localizer["FORCE"]</th>
                                    <th>Used</th>
                                    <th class="text-right">@localizer["ACTION"]</th>
                                </tr>
                            </thead>
                            <tbody>
                                <Virtualize Items="Data" Context="template">
                                    <tr>
                                        <td>@template.Name</td>
                                        <td>@AppdataService.Fractions.FirstOrDefault(x => x.FractionId == template.FractionId)?.GetLocalization(CultureInfo.CurrentCulture)?.Name</td>
                                        <td>@template.Force</td>
                                        <td>@template.UsedForce</td>
                                        <td class="text-right">
                                            <span class="aktion-icon" role="button" @onclick="() => SelectedForDeletion = template">
                                                <i class="fa-solid fa-trash-can"></i>
                                            </span>
                                            <span class="aktion-icon" role="button" @onclick="async () => await EditAsync(template)">
                                                <i class="fa-solid fa-pen-to-square"></i>
                                            </span>
                                        </td>
                                    </tr>
                                </Virtualize>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




@if (Input is not null && _loggedInUser is not null)
{
    <Modal Title="@String.Format("Edit template: {0}", Input.Name)"
           OnClosed="() => Input = null"
           ModalSize="ModalSize.LG"
           HideFooter="true">

        <EditForm Model="Input" @ref="_form">
            <FluentValidationValidator />
            <div class="row">
                <div class="col-12">
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Input.Name" class="form-control" id="template-name" placeholder="Name" />
                        <label for="template-name">@localizer["NAME"]</label>
                        <ValidationMessage For="() => Input.Name" />
                    </div>

                    <div class="form-floating mb-3">
                        <InputSelect id="template-force" @bind-Value="Input.Force" @oninput="ClearUnitsAsync" class="form-control">
                            @if (Input.Force == 0)
                            {
                                <option value="0" selected>@localizer["SELECT_CHOOSE"]</option>
                            }
                            @for (int i = 200; i <= 800; i += 100)
                            {
                                <option value="@i">@i</option>
                            }
                        </InputSelect>
                        <label for="template-force">@localizer["FORCE"]</label>
                        <ValidationMessage For="() => Input.Force" />
                    </div>

                    <div class="form-floating mb-3">
                        <InputSelect id="select-fraction" @bind-Value="Input.FractionId" @oninput="ClearUnitsAsync" class="form-control">
                            @if (Input.FractionId == 0)
                            {
                                <option value="0" selected>@localizer["SELECT_CHOOSE"]</option>
                            }
                            @foreach (Fraction item in AppdataService.Fractions)
                            {
                                <option value="@item.FractionId">@item.GetLocalization(CultureInfo.CurrentCulture)?.Name</option>
                            }
                        </InputSelect>
                        <label for="select-fraction">@localizer["CHOOSE_FRACTION"]</label>
                        <ValidationMessage For="() => Input.FractionId" />
                    </div>

                    <h4>@localizer["UNITS"]</h4>

                    <div class="table-responsive">
                        <table class="table table-lg">
                            <thead>
                                <tr>
                                    <th>@localizer["NAME"]</th>
                                    <th>@localizer["QUANTITY"]</th>
                                    <th>@localizer["FORCE"]</th>
                                    <th>@localizer["ACTION"]</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var unit in Input.Units)
                                {
                                    int maxQuantity = _loggedInUser?.Units?.FirstOrDefault(x => x.UnitId == unit.UnitId)?.Quantity ?? 0;

                                    <tr>
                                        <td class="text-bold-500">@unit.GetLocalization(CultureInfo.CurrentCulture)?.Name</td>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <button class="btn" @onclick="async () => await DecrementAsync(unit)">
                                                    <i class="fa-solid fa-minus cursor-pointer"></i>
                                                </button>
                                                <input class="text-right" @bind="unit.Quantity" max="maxQuantity" readonly style="width:40px" />
                                                <button class="btn" @onclick="async () => await IncrementAsync(unit)">
                                                    <i class="fa-solid fa-plus cursor-pointer"></i>
                                                </button>
                                            </div>
                                        </td>
                                        <td>
                                            <p>@unit.ForceOfQuantity (@unit.Force)</p>
                                        </td>
                                        <td>
                                            <button class="btn">
                                                <i class="fa-solid fa-trash-can" @onclick="async () => await ClearUnitAsync(unit)"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }

                                <tr>
                                    <th><ValidationMessage For="() => Input.UsedForce" /></th>
                                    <th></th>
                                    <th>@Input.UsedForce</th>
                                    <th>
                                        @if (Input.Units.Any())
                                        {
                                            <button class="btn">
                                                <i class="fa-solid fa-trash-can" @onclick="ClearUnitsAsync"></i>
                                            </button>                                         
                                        }
                                    </th>
                                </tr>

                                <tr>
                                    <td colspan="3">
                                        <div class="input-group">
                                            <select @onchange="UnitSelectionChangedAsync" class="form-select" id="inputGroupSelect04" aria-label="Unit">
                                                @if (SelectedUnit is null)
                                                {
                                                    <option value="0" selected>@localizer["SELECT_CHOOSE"]</option>
                                                }
                                                else
                                                {
                                                    <option value="0">@localizer["SELECT_CHOOSE"]</option>
                                                }

                                                @foreach (var unit in _loggedInUser.Units.Where(x => x.FractionId == Input.FractionId))
                                                {
                                                    var templateUnit = Input.Units.FirstOrDefault(x => x.UnitId == unit.UnitId);
                                                    @if (templateUnit is null)
                                                    {
                                                        <option value="@unit.UnitId">@unit.GetLocalization(CultureInfo.CurrentCulture)?.Name</option>
                                                    }
                                                }
                                            </select>

                                            <button @onclick="AddUnitAsync" class="btn btn-success" type="button" disabled="@(SelectedUnit is null ||  Input.Force == 0)">
                                                <i class="fa-solid fa-plus"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </EditForm>

        <div class="toolbar">
            <button type="button" class="btn btn-danger" @onclick="() => Input = null">@localizer["CANCEL"]</button>
            <button type="button" class="btn btn-success" @onclick="SaveAsync">@localizer["SAVE"]</button>
        </div>
    </Modal>
}

@if (SelectedForDeletion is not null)
{
    <ConfirmModal Title="Delete"
                  OnClosed="() => SelectedForDeletion = null"
                  OnConfirmed="DeleteAsync">
        <p>@String.Format("Should the game '{0}' really be deleted?", SelectedForDeletion.Name)</p>
    </ConfirmModal>
}