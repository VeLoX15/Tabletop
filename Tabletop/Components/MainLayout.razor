@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject AuthService authService

@inject IStringLocalizer<App> localizer

@using System.Runtime.InteropServices

<PageTitle>@localizer["TABLEBRICKS"]</PageTitle>

<div id="app" class="app-background">
    <div id="sidebar" class="@(ShowMenu ? "active" : string.Empty)">
        <div class="sidebar-wrapper active">
            <div class="sidebar-header position-relative">
                <div class="d-flex justify-content-between align-items-center">
                    <div role="button" class="sidebar-toggler x">
                        <span class="sidebar-hide d-xl-none d-block" @onclick="TriggerMenuAsync"><i class="bi bi-x-lg"></i></span>
                    </div>
                </div>
            </div>
            <div class="sidebar-menu">
                <NavMenu />
            </div>
        </div>
    </div>
    <div id="main" class="pb-0">

        <header class="d-flex align-items-center justify-content-between d-xl-none">
            <div>
                <span role="button" @onclick="TriggerMenuAsync" class="burger-btn d-block d-xl-none menu-button">
                    <i class="fa-solid fa-bars text-white text-center"></i>
                </span>
            </div>
            <div>
                <a href="/" class="text-decoration-none">
                    <h1 class="text-white mb-0">@localizer["TABLEBRICKS_UPPER"]</h1>
                </a>
            </div>
            <div>
                @if (_loggedInUser != null)
                {
                    <a href="/Account/Profile/">
                        <img src="@_loggedInUser.ConvertedImage" height="50" width="50" class="rounded-circle" alt="Logo" title="Logo">
                    </a>
                }
            </div>
        </header>


        <div class="page-content background">
            <section class="row">
                @Body
            </section>
        </div>

        <footer class="footer card m-0 mb-3">
            <div class="card-header p-4">
                <div class="row">
                    <div class="col-lg-4">
                        <h5>@localizer["ABOUT_US"]</h5>
                        <div>
                            <p style="text-align: justify">@localizer["ABOUT_US_TEXT"]</p>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <h5>@localizer["CONTACT"]</h5>
                        <ul class="list-unstyled">
                            <li><i class="bi bi-geo-alt-fill"></i> @localizer["ADDRESS"]</li>
                            <li><i class="bi bi-envelope-fill"></i> @localizer["EMAIL"]</li>
                        </ul>
                    </div>
                    <div class="col-lg-3">
                        <h5>@localizer["SOCIAL_MEDIA"]</h5>
                        <ul class="list-inline">
                            <li class="list-inline-item"><a href="https://github.com/VeLoX15/Tabletop"><i class="fa-brands fa-github"></i></a></li>
                            <li class="list-inline-item"><a href="https://www.instagram.com/"><i class="fa-brands fa-instagram"></i></a></li>
                            <li class="list-inline-item"><a href="https://twitter.com"><i class="fa-brands fa-twitter"></i></a></li>
                        </ul>
                    </div>
                    <div class="col-lg-2">
                        <div class="text-center pt-5 pb-5">
                            @DateTime.Now.Year &copy; @localizer["TABLEBRICKS"]
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
</div>



@code {

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("blazorHelpers.startUp");
            ShowMenu = await JSRuntime.InvokeAsync<bool>("blazorHelpers.isDesktop");
            StateHasChanged();
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task TriggerMenuAsync()
    {
        bool isDesktop = await JSRuntime.InvokeAsync<bool>("blazorHelpers.isDesktop");
        ShowMenu = !ShowMenu;
    }

    protected override async Task OnParametersSetAsync()
    {
        _loggedInUser = await authService.GetUserAsync();

        if (_loggedInUser?.Image != null)
        {
            string base64String = Convert.ToBase64String(_loggedInUser.Image);
            _loggedInUser.ConvertedImage = $"data:image/png;base64,{base64String}";
        }
    }

    public bool ShowMenu { get; set; }
    private User? _loggedInUser;
}